name: CI actions

on: 
  push:
    branches:
      - deploiement

jobs:

  build:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 3
      matrix:
        python-version: [ 3.7, 3.8, 3.9]
        database-engine:
          - django.db.backends.postgresql
        database-name: 
          - db_actions
        database-password:
          - postgres
        database-user:
          - postgres
        database-host:
          - 127.0.0.1
        database-port:
          - 5432
  
    services:
        postgres:
          image: postgres:latest
          env:
            POSTGRES_DB: ${{ matrix.database-name }}
            POSTGRES_USER: ${{ matrix.database-user }}
            POSTGRES_PASSWORD: ${{ matrix.database-password }}
          ports:
            - 5432:5432
          # Set health checks to wait until postgres has started
          options:
            --health-cmd pg_isready
            --health-interval 10s
            --health-timeout 5s
            --health-retries 5

    steps:
      - uses: actions/checkout@v2.4.0
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Run migrations
        env:
          DEBUG: 1
          DJANGO_ALLOWED_HOSTS: localhost
          DJANGO_KEY: secret-key
          SQL_ENGINE: ${{ matrix.database-engine }}
          SQL-DATABASE: ${{ matrix.database-name }}
          SQL_USER: ${{ matrix.database-user }}
          SQL_PASSWORD: ${{ matrix.database-password }}
          SQL_HOST: ${{ matrix.database-host }}
          SQL_PORT: ${{ matrix.database-port }}
        run: |
          python app/manage.py migrate      
      - name: Run tests
        env:
          DEBUG: 1
          DJANGO_ALLOWED_HOSTS: localhost
          DJANGO_KEY: secret-key
          SQL_ENGINE: ${{ matrix.database-engine }}
          SQL-DATABASE: ${{ matrix.database-name }}
          SQL_USER: ${{ matrix.database-user }}
          SQL_PASSWORD: ${{ matrix.database-password }}
          SQL_HOST: ${{ matrix.database-host }}
          SQL_PORT: ${{ matrix.database-port }}
          CI: $CI
        run: |
          python app/manage.py test test